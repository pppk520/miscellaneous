'''
Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.

Sample Input :

(1, 1)
(2, 2)
Sample Output :

2
You will be give 2 arrays X and Y. Each point is represented by (X[i], Y[i])
'''

class Solution:
    # @param A : list of integers
    # @param B : list of integers
    # @return an integer
    def maxPoints(self, A, B):
        if len(A) == 0:
            return 0

        maxmax = 1
        for i in range(len(A)):
            d = {}
            for j in range(len(A)):
                if i == j:
                    continue

                p1 = (A[i], B[i])
                p2 = (A[j], B[j])

                if p1[0] == p2[0]:
                    slope = 'INF'
                elif p1[1] == p2[1]:
                    slope = 0
                else:
                    slope = "%.5f" %(float(p2[1] - p1[1]) / (p2[0] - p1[0]))

                if not slope in d:
                    d[slope] = 1
                else:
                    d[slope] += 1
            
            for slope in d:
                maxmax = max(d[slope] + 1, maxmax)
   
        return maxmax


if __name__ == '__main__':
    assert(Solution().maxPoints([14,-17,2,-13,-18,9,15,2,-3,-7,-10,14,-2,-18,-7,12,1,-9,-16,-4,11,-4,-16,17,5,8,-16,-8,5,4,16,14,-12,13,2,-14,-9,20,-5,-19,-16,-19,3,3,1,-18,19,11,-16,10,12,-5,-1,-5,-17,-20,18,-15,-3,-5,17,14,0,0,3,10,13,10,15,2,19,-14,-17,4,6,1,12], [-2,-3,3,-5,6,-10,5,11,18,-1,-13,-6,13,-14,-1,-19,-13,2,-6,-3,2,-2,-11,5,-13,18,-15,12,5,14,2,8,4,-20,-1,-1,-16,20,-9,-2,0,1,-4,-1,-20,-2,-9,2,10,-12,4,12,-3,2,3,4,-1,10,19,-17,14,7,17,5,-9,-13,6,18,1,2,4,6,6,-3,7,18,18]) == 7)
    assert(Solution().maxPoints([4,-4,8], [-4,-4,-4]) == 3)
    assert(Solution().maxPoints([-29], [-13]) == 1)
    assert(Solution().maxPoints([-29], [-13]) == 1)
    assert(Solution().maxPoints([-2, -19, -15, -9, -15, -14, -10, 20, -11, -3, -6, 6, 17, -6, 20, -17, 1, 13, 0, -2, -9, -17, -5, -18, -12, -17, -7, -20, -16, 14, 12, 4, -5, -15, 13, 20, 20, -16, -15, -9, -15, -3, 18, -7, 9, -15, -16, -8, 12, 7, -14, 9, -17, -9, 16, 9, 18, 13, 9, 19, -2, 5, -17, -20, -3, -1, 3, 20, 16, 19, 3, 20, 5, -1, 3, -1, -5, 19, -13, 10, 9, 10, -18, 19, -19, 20, 16, 16, -3, -15, -1, -3, -7, 10, 0, 19, 12, -4],
                                [-3, 19, -13, -13, -8, -1, 16, 8, -10, 9, 10, 13, 9, 9, 11, -10, -5, 14, 3, 8, 20, -7, 14, 18, -10, 9, 17, -19, -13, 12, 14, 13, -8, 1, -14, 10, 1, 13, 12, -7, 12, 18, -20, 7, 19, -19, 20, 8, 11, -1, -13, 9, 16, -11, -12, 11, -1, 6, 5, 8, 9, -3, 0, 6, 8, -17, 0, 1, 16, 16, 2, -13, -20, -14, 4, -10, 2, -4, -9, -15, -17, 6, -4, -13, -18, 2, 11, 8, -19, 12, -11, -1, -6, -1, -15, 17, 13, 2]) == 8)
    assert(Solution().maxPoints([15, 9, -16, -15, 11, -5, -3, -11, -8, 3, 15, -16, -6, 14, -1, -1, 3, 6, 10, 0, 19, -10, -17, 8, 20, -4, -9, 10, -14, -2, -18, 7, -12, -17, 5, -2, 15, -5, 1, 19, -14, 18, 1, -15, -18, 13, -16, 1, 20, 7, 1, -7, 7, -15, -1, -3, -11, -17, -12, 15, 15, 7, 19, -15, 10, -14, 0, -12, 4, 7, -5, 1, 1, 2, 6, -17, 14, -13, -9, -5, -18, 9, 19, 16, 3, -18, -11, -15, -3, -18, 13, -16, -9, 15, 19, 9],
                                [12, 10, 3, 15, -10, 20, -15, -8, -3, 6, -14, -18, -8, 9, -7, -2, 11, 20, -7, 14, -18, -15, -1, 7, -18, -9, 16, 14, -15, -10, 9, -5, 11, -6, -17, -20, -2, -16, -20, -12, -1, 10, -20, 19, 13, -3, -17, 0, -18, 19, -6, -11, 1, 12, 7, -13, 2, -5, -14, -3, -11, 3, 7, 19, -14, 5, -1, -4, 18, -3, -3, -11, -1, 16, -6, 9, 3, 8, 14, -1, -17, -10, 19, 7, 7, -12, 12, 20, 4, 1, 17, -15, -9, 8, -9, -17]) == 6)
    assert(Solution().maxPoints([1, 1, 1], [0, 4, -1]) == 3)
    assert(Solution().maxPoints([1, 2], [1, 2]) == 2)

