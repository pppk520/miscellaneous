class Solution:
    # @param gas : tuple of integers
    # @param cost : tuple of integers
    # @return an integer
    def canCompleteCircuit(self, gas, cost):
        if sum(gas) - sum(cost) < 0:
            return -1

        curr_sum = 0
        i = 0
        j = 0
        n = len(gas)

        while True:
            curr_sum += gas[j] - cost[j]

#            print('i = {}, j = {}, gas_j = {}, cost_j = {}, curr_sum = {}'.format(i, j, gas[j], cost[j], curr_sum))

            if curr_sum < 0:
                curr_sum -= gas[i] # try start from next
                curr_sum += cost[i]

                i += 1

                if i > j:
                    j = i = i % n
                    curr_sum = 0
                else:
                    i = i % n
            else:
                j = (j + 1) % n 

                if j == i:
                    break

        return i
        

if __name__ == '__main__':
    assert(Solution().canCompleteCircuit((204, 918, 18, 17, 35, 739, 913, 14, 76, 555, 333, 535, 653, 667, 52, 987, 422, 553, 599, 765, 494, 298, 16, 285, 272, 485, 989, 627, 422, 399, 258, 959, 475, 983, 535, 699, 663, 152, 606, 406, 173, 671, 559, 594, 531, 824, 898, 884, 491, 193, 315, 652, 799, 979, 890, 916, 331, 77, 650, 996, 367, 86, 767, 542, 858, 796, 264, 64, 513, 955, 669, 694, 382, 711, 710, 962, 854, 784, 299, 606, 655, 517, 376, 764, 998, 244, 896, 725, 218, 663, 965, 660, 803, 881, 482, 505, 336, 279),
                                         (273, 790, 131, 367, 914, 140, 727, 41, 628, 594, 725, 289, 205, 496, 290, 743, 363, 412, 644, 232, 173, 8, 787, 673, 798, 938, 510, 832, 495, 866, 628, 184, 654, 296, 734, 587, 142, 350, 870, 583, 825, 511, 184, 770, 173, 486, 41, 681, 82, 532, 570, 71, 934, 56, 524, 432, 307, 796, 622, 640, 705, 498, 109, 519, 616, 875, 895, 244, 688, 283, 49, 946, 313, 717, 819, 427, 845, 514, 809, 422, 233, 753, 176, 35, 76, 968, 836, 876, 551, 398, 12, 151, 910, 606, 932, 580, 795, 187)) == 31)
    assert(Solution().canCompleteCircuit((10, 6, 97, 4, 7, 2), (9, 5, 100, 2, 8, 2)) == 3)
    assert(Solution().canCompleteCircuit((237, 573, 278, 782, 819, 548, 14, 670, 81, 178, 448, 889, 200, 541, 582, 111, 718, 236, 292, 850, 536, 654, 230, 551, 917, 788, 531, 26, 206, 960, 381, 183, 207, 44, 141, 252, 74, 890, 857, 834, 396, 569, 597, 538, 370, 876, 481, 307, 643, 138, 652, 676, 340, 590, 565, 857, 584, 275, 703, 508, 388, 454, 944, 670 ), (316, 803, 374, 899, 361, 548, 430, 366, 137, 993, 751, 9, 52, 774, 449, 533, 870, 271, 829, 232, 529, 9, 167, 738, 779, 89, 515, 67, 649, 831, 508, 397, 914, 236, 134, 914, 129, 77, 372, 921, 527, 588, 249, 275, 23, 793, 321, 264, 30, 360, 29, 27, 96, 150, 746, 338, 921, 846, 719, 193, 565, 236, 92, 453)) == 37)
    

